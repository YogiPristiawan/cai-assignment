services:
  transaction-db:
    image: postgres:15.6-bullseye
    container_name: transaction-db
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRESQL_USER:?err}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD:?err}
      POSTGRES_DB: ${POSTGRESQL_DB:?err}
    # volumes:
    #   - transaction-db-data:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -U ${POSTGRESQL_USER:?err} -d ${POSTGRESQL_DB:?err}"
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - transaction
      - app_network

  transaction-migration:
    image: transaction-migration
    container_name: transaction-migration
    env_file:
      - .env
    build:
      context: ./prisma
      args:
        POSTGRESQL_URL: ${POSTGRESQL_URL}
    depends_on:
      transaction-db:
        condition: service_healthy
    networks:
      - transaction

  transaction-service:
    image: transaction-service
    container_name: transaction-service
    build:
      context: .
    depends_on:
      transaction-migration:
        condition: service_completed_successfully
      transaction-db:
        condition: service_healthy
      supertokens:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - ${APP_PORT:?err}:${APP_PORT:?err}
    environment:
      POSTGRESQL_URL: ${POSTGRESQL_URL:?err}
      SUPERTOKENS_URI: ${SUPERTOKENS_URI:?err}
      SUPERTOKENS_WEBSITE_DOMAIN: ${SUPERTOKENS_WEBSITE_DOMAIN:?err}
      SUPERTOKENS_API_DOMAIN: ${SUPERTOKENS_API_DOMAIN:?err}
      APP_NAME: ${APP_NAME:?err}
      APP_PORT: ${APP_PORT:?err}
      ACCOUNT_SERVICE_URI: ${ACCOUNT_SERVICE_URI:?err}
    healthcheck:
      test: "curl -f http://localhost:3001/ping"
      interval: 200s
      timeout: 3s
      retries: 5
    networks:
      - transaction
      - app_network
    restart: unless-stopped

networks:
  transaction:
    driver: bridge
  app_network:
    driver: bridge
#
# volumes:
#   transaction-db-data:
#     external: false
